;;-*- lisp -*-

;;Declare what this file is for.
(in-package :stumpwm)

;; (setf stumpwm::*debug-level* 5)
;; (setf *timeout-wait* 3)
;; (setf *debug-stream* (open "~/tmp/stumpwm.log" :direction :output :if-exists :supersede))

;; load what is necessary
(set-contrib-dir "~/projects/stumpwm-contrib")
(load-module "cpu")
(load-module "mem")
(set-contrib-dir "~/Dropbox/.stumpwm")
(load-module "dropbox")
(load-module "pulseaudio")
;;(load-module "synergyc")

(load "~/.emacs.d/libraries/slime-2012-08-31/swank-loader.lisp")
(swank-loader:init)

;; commands
(defcommand swank () ()
  "Creates a swank server in the stumpwm lisp process"
  (setf stumpwm:*top-level-error-action* :break)
  (swank:create-server :port 4005
		       :style swank:*communication-style*
		       :dont-close t)
  (echo-string (current-screen) 
	       "Starting swank. M-x slime-connect RET RET, then (in-package stumpwm)."))

(defcommand mode-line-toggle () ()
  "Toggles the mode-line"
  (toggle-mode-line (current-screen) (current-head)))

(defcommand chrome () ()
  "run chrome"
  (run-or-raise "google-chrome" '(:instance "google-chrome")))

(defcommand as () ()
  "run android-studio"
  (run-or-raise "/home/david/bin/android-studio/bin/studio.sh" '(:instance "android-studio-garbage"))) 

;; keyboard prefix
(run-shell-command "setxkbmap hu")
(run-shell-command "xmodmap ~/.xmodmaprc")

(set-prefix-key (kbd "Super_L"))

;; keyboard
(define-key *top-map* (kbd "C-M-Delete") "restart-hard")
(define-key *top-map* (kbd "M-F2") "exec")
(define-key *top-map* (kbd "M-h") "exec setxkbmap hu && xmodmap ~/.xmodmaprc") 
(define-key *top-map* (kbd "M-d") "exec setxkbmap de && xmodmap ~/.xmodmaprc")
(define-key *top-map* (kbd "M-m") "mode-line-toggle")
(define-key *top-map* (kbd "XF86AudioMute") "volume-mute")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "volume-raise")
(define-key *top-map* (kbd "XF86AudioLowerVolume") "volume-lower")
(define-key *root-map* (kbd "C-s") "swank")
(define-key *root-map* (kbd "C-,") "colon")
(define-key *root-map* (kbd ",") "colon")
(define-key *root-map* (kbd "C-x") "exec sakura")
(define-key *root-map* (kbd "x") "exec sakura")
(define-key *root-map* (kbd "C-c") "chrome")
(define-key *root-map* (kbd "c") "chrome")

;; input and message bar
(setf *message-window-gravity* :center)
(setf *input-window-gravity* :center)

;; mode-line
(setf *window-format* "%m%n%s%30t")
(setf *time-modeline-string* "%a %b %e %k:%M")
;;(setf *screen-mode-line-format* "[^B%n^b] | ^B%d^b | BAT: %B | VOL: %V | %c | DBOX: %D | SYGC: %S")
(setf *screen-mode-line-format* "[^B%n^b] | ^B%d^b | VOL: %V | %c| %M| DBOX: %D")
(setf *mode-line-timeout* 60)
(enable-mode-line (current-screen) (current-head) t)

;; mouse frame selection
(setf *mouse-focus-policy* :click) ;; :click, :ignore, :sloppy

;; run shell commands
(run-shell-command "xsetroot -cursor_name left_ptr")
;;(run-shell-command "feh --bg-scale ~/Pictures/151136_1600x1200.jpg")
(run-shell-command "dropbox start")
(run-shell-command "xfce4-power-manager")
(run-shell-command "pulseaudio --start")

